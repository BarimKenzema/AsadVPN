name: Build APK with libbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Accept SDK licenses (ignore Broken pipe after completion)
      - name: Accept SDK licenses
        shell: bash
        run: |
          yes | sdkmanager --licenses || true

      # Install required SDK packages
      - name: Install Android SDK components
        shell: bash
        run: |
          set -eux
          # We need both a modern platform for Flutter build and API 21 for gomobile
          sdkmanager --install "platform-tools" "platforms;android-34" "platforms;android-21" "build-tools;34.0.0" "ndk;25.1.8937393"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV
          ls -lah "$ANDROID_SDK_ROOT/ndk/" || true

      - name: Set up Go 1.24.x
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      # Build libbox.aar via a pinned gomobile (use go run to pin version)
      - name: Build libbox.aar via pinned gomobile
        shell: bash
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        run: |
          set -eux
          export GO111MODULE=on

          # Pin gomobile to a known-good version that still includes the bind APIs gomobile expects.
          # This avoids the "unable to import bind: no Go package in golang.org/x/mobile/bind".
          GOMOBILE_VER=v0.0.0-20231002-5e0c301b3b9b

          go version
          # Initialize gomobile (pinned). No -ndk flag; it discovers via env vars.
          go run golang.org/x/mobile/cmd/gomobile@${GOMOBILE_VER} init

          # Fetch sing-box source (stable tag)
          git clone --depth 1 --branch v1.12.8 https://github.com/SagerNet/sing-box.git sing-box-src

          # Build libbox AAR targeting API 21 (>=19 required by NDK r25)
          mkdir -p android/app/libs
          cd sing-box-src/experimental/libbox

          go run golang.org/x/mobile/cmd/gomobile@${GOMOBILE_VER} bind \
            -target=android \
            -androidapi 21 \
            -javapkg io.nekohasekai.libbox \
            -o "$GITHUB_WORKSPACE/android/app/libs/libbox.aar"

          ls -lah "$GITHUB_WORKSPACE/android/app/libs/"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
